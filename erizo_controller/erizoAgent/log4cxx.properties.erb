# WARNING: THIS IS AUTO-GENERATED BY CHEF, DO NOT EDIT BY HAND.
# Configuration for fleet machines
# Set root logger level to DEBUG and its only appender to A1.
log4j.rootLogger=DEBUG, A1

# A1 is set to be a ConsoleAppender.
log4j.appender.A1=org.apache.log4j.ConsoleAppender

# A1 uses PatternLayout.
log4j.appender.A1.layout=org.apache.log4j.PatternLayout
# Print the date in ISO 8601 format
log4j.appender.A1.layout.ConversionPattern=%d  - %p: %c - %m%n

log4j.logger.OneToManyProcessor=<%= node['licode']['loglevel_one_to_many_processor'] %>
log4j.logger.WebRtcConnection=<%= node['licode']['loglevel_web_rtc_connection'] %>
log4j.logger.SrtpChannel=<%= node['licode']['loglevel_srtp_channel'] %>
log4j.logger.SdpInfo=<%= node['licode']['loglevel_sdp_info'] %>
log4j.logger.NiceConnection=<%= node['licode']['loglevel_nice_connection'] %>
log4j.logger.DtlsTransport=<%= node['licode']['loglevel_dtls_transport'] %>
log4j.logger.Resender=<%= node['licode']['loglevel_resender'] %>
log4j.logger.SdesTransport=<%= node['licode']['loglevel_sdes_transport'] %>
log4j.logger.Stats=<%= node['licode']['loglevel_stats'] %>

log4j.logger.dtls.DtlsSocket=<%= node['licode']['loglevel_dtls_socket'] %>
log4j.logger.dtls.DtlsFactory=<%= node['licode']['loglevel_dtls_factory'] %>
log4j.logger.dtls.SSL=<%= node['licode']['loglevel_ssl'] %>
log4j.logger.dtls.DtlsSocketContext=<%= node['licode']['loglevel_dtls_socket_context'] %>

log4j.logger.rtp.RtpVP8Fragmenter=<%= node['licode']['loglevel_rtp_vp8_fragmenter'] %>
log4j.logger.rtp.RtpParser=<%= node['licode']['loglevel_rtp_parser'] %>
log4j.logger.rtp.RtpPacketQueue=<%= node['licode']['loglevel_rtp_packet_queue'] %>
log4j.logger.rtp.RtcpProcessor=<%= node['licode']['loglevel_rtcp_processor'] %>

log4j.logger.media.OneToManyTranscoder=<%= node['licode']['loglevel_one_to_many_transcoder'] %>
log4j.logger.media.InputProcessor=<%= node['licode']['loglevel_input_processor'] %>
log4j.logger.media.OutputProcessor=<%= node['licode']['loglevel_output_processor'] %>
log4j.logger.media.ExternalInput=<%= node['licode']['loglevel_ext_input'] %>
log4j.logger.media.ExternalOutput=<%= node['licode']['loglevel_ext_output'] %>

log4j.logger.media.mixers.VideoUtils=<%= node['licode']['loglevel_vid_utils'] %>
log4j.logger.media.mixers.VideoMixer=<%= node['licode']['loglevel_vid_mixer'] %>

log4j.logger.media.codecs.VideoEncoder=<%= node['licode']['loglevel_vid_encoder'] %>
log4j.logger.media.codecs.VideoDecoder=<%= node['licode']['loglevel_vid_decoder'] %>
# Affectiva doesn't use audio so hard-coding to off
log4j.logger.media.codecs.AudioEncoder=OFF
log4j.logger.media.codecs.AudioDecoder=OFF
